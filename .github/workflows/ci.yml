name: Check new patch
permissions: write-all
on:
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:
    inputs:
      retry_count:
        description: 'Do not change value below'
        required: false
        default: '1'
jobs:
  check:
    name: Check new patch
    runs-on: ubuntu-latest
    env:
      repository: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Check github connection
        id: check-gh
        run: bash src/etc/connection.sh
      - name: Check new patch ReVanced
        id: check-rv
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh ReVanced/revanced-patches latest youtube-revanced.apk
      - name: Check new patch ReVanced Beta
        id: check-rv-beta
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh ReVanced/revanced-patches prerelease youtube-beta-revanced.apk
      - name: Check new patch Spotjfy
        id: check-spotjfy
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh ReVanced/revanced-patches latest spotjfy-arm64-v8a-revanced.apk
      - name: Check new patch Revanced Extended forked by Anddea Stable Version
        id: check-rve-anddea-stable
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh anddea/revanced-patches latest youtube-stable-anddea.apk
      - name: Check new patch Revanced Extended forked by Anddea Beta Version
        id: check-rve-anddea-beta
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh anddea/revanced-patches prerelease youtube-beta-anddea.apk
      - name: Check new patch Revanced Extended
        id: check-rve
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh inotia00/revanced-patches latest youtube-revanced-extended.apk
      - name: Check new patch Revanced Extended Beta
        id: check-rve-beta
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh inotia00/revanced-patches prerelease youtube-beta-revanced-extended.apk
      - name: Check new patch Twitter Piko Stable
        id: check-twitter-piko-stable
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh crimera/piko latest twitter-stable-piko.apk
      - name: Check new patch Twitter Piko Beta
        id: check-twitter-piko-beta
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh crimera/piko prerelease twitter-beta-piko.apk
      - name: Check new patch Revanced For Android 6 & 7
        id: check-rve67
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh kitadai31/revanced-patches-android6-7 latest youtube-revanced-extended-android-6-7.apk
      - name: Check new patch Revanced For Android 5
        id: check-rve5
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh d4n3436/revanced-patches-android5 latest youtube-revanced-extended-android-5.apk
      - name: Check new patch BiliRoamingM
        id: check-BiliRoamingM
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh sakarie9/BiliRoamingM latest bilibili-BiliRoamingM.apk
      - name: Check new patch Revanced Experiments
        id: check-Revanced-Experiments
        if: steps.check-gh.outputs.internet_error == '0'
        run: bash src/etc/ci.sh Aunali321/ReVancedExperiments latest telegram-revanced-experiments.apk
      - name: Re-run workflow if github connection not stable
        if: always() && steps.check-rv.outcome == 'skipped' && env.retry_count < env.max_retries
        uses: actions/github-script@v7
        with:
          script: |
            const maxRetries = ${{ env.max_retries }};
            let retryCount = ${{ env.retry_count }};
            if (retryCount < maxRetries) {
              retryCount += 1;
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: "ci.yml",
                ref: context.ref,
                inputs: {
                  'retry_count': String(retryCount)
                }
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          retry_count: ${{ github.event.inputs.retry_count }}
          max_retries: 3
    outputs:
      check_rv: ${{ steps.check-rv.outputs.new_patch }}
      check_rv_beta: ${{ steps.check-rv-beta.outputs.new_patch }}
      check_spotjfy: ${{ steps.check-spotjfy.outputs.new_patch }}
      check_rve_anddea_stable: ${{ steps.check-rve-anddea-stable.outputs.new_patch }}
      check_rve_anddea_beta: ${{ steps.check-rve-anddea-beta.outputs.new_patch }}
      check_rve: ${{ steps.check-rve.outputs.new_patch }}
      check_rve_beta: ${{ steps.check-rve-beta.outputs.new_patch }}
      check_twitter_piko_stable: ${{ steps.check-twitter-piko-stable.outputs.new_patch }}
      check_twitter_piko_beta: ${{ steps.check-twitter-piko-beta.outputs.new_patch }}
      check_rve67: ${{ steps.check-rve67.outputs.new_patch }}
      check_rve5: ${{ steps.check-rve5.outputs.new_patch }}
      check_BiliRoamingM: ${{ steps.check-BiliRoamingM.outputs.new_patch }}
      check_Revanced_Experiments: ${{ steps.check-Revanced-Experiments.outputs.new_patch }}

  Patch-Revanced:
    name: Patch Revanced Stable
    needs: check
    if: ${{ needs.check.outputs.check_rv == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Revanced"
  Patch-Revanced-Beta:
    name: Patch Revanced Beta
    needs: check
    if: ${{ needs.check.outputs.check_rv_beta == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Revanced Beta"
  Patch-Spotjfy:
    name: Patch Spotjfy
    needs: check
    if: ${{ needs.check.outputs.check_spotjfy == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Spotjfy"
  Patch-RVE-anddea-stable:
    name: Patch RVX Anddea Stable
    needs: check
    if: ${{ needs.check.outputs.check_rve_anddea_stable == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "RVE-anddea-stable"
  Patch-RVE-anddea-beta:
    name: Patch RVX Anddea Beta
    needs: check
    if: ${{ needs.check.outputs.check_rve_anddea_beta == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "RVE-anddea-beta"
  Patch-Revanced-Extended:
    name: Patch Revanced Extended
    needs: check
    if: ${{ needs.check.outputs.check_rve == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Revanced Extended"
  Patch-Revanced-Extended-Beta:
    name: Patch Revanced Extended Beta
    needs: check
    if: ${{ needs.check.outputs.check_rve_beta == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Revanced Extended Beta"
  Patch-Twitter-Piko-Stable:
    name: Patch Twitter Piko Stable
    needs: check
    if: ${{ needs.check.outputs.check_twitter_piko_stable == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Twitter Piko Stable"
  Patch-Twitter-Piko-Beta:
    name: Patch Twitter Piko Beta
    needs: check
    if: ${{ needs.check.outputs.check_twitter_piko_beta == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Twitter Piko Beta"
  Patch-Revanced-Extended-For-Android-6-7:
    name: Patch RVX Android 6 & 7
    needs: check
    if: ${{ needs.check.outputs.check_rve67 == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Revanced Extended Android 6,7"
  Patch-Revanced-Extended-For-Android-5:
    name: Patch RVX Android 5
    needs: check
    if: ${{ needs.check.outputs.check_rve5 == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Revanced Extended Android 5"
  Patch-BiliRoamingM:
    name: Patch BiliRoamingM
    needs: check
    if: ${{ needs.check.outputs.check_BiliRoamingM == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "BiliRoamingM"
  Patch-Revanced-Experiments:
    name: Patch Revanced Experiments
    needs: check
    if: ${{ needs.check.outputs.check_Revanced_Experiments == 1 }}
    uses: ./.github/workflows/manual-patch.yml
    with:
      org: "Revanced Experiments"

  Notify-Telegram:
    name: Notify Telegram
    needs:
      - Patch-Revanced
      - Patch-Revanced-Beta
      - Patch-Spotjfy
      - Patch-RVE-anddea-stable
      - Patch-RVE-anddea-beta
      - Patch-Revanced-Extended
      - Patch-Revanced-Extended-Beta
      - Patch-Twitter-Piko-Stable
      - Patch-Twitter-Piko-Beta
      - Patch-Revanced-Extended-For-Android-6-7
      - Patch-Revanced-Extended-For-Android-5
      - Patch-BiliRoamingM
      - Patch-Revanced-Experiments
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Send summary message
        run: |
          MESSAGE="✅ New patches released at $(date +'%Y-%m-%d %H:%M')"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="$MESSAGE"

      - name: Send APK links to Telegram
        run: |
          TAG="all"
          REPO="${{ github.repository }}"
          CHAT_ID="${{ secrets.TELEGRAM_CHAT_ID }}"
          BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"

          # storage variables
          declare -A YT_REVANCED YTM_REVANCED SPOT_REVANCED OTHER_REVANCED
          declare -A YT_EXTENDED YTM_EXTENDED SPOT_EXTENDED OTHER_EXTENDED
          declare -A YT_ANDDEA YTM_ANDDEA SPOT_ANDDEA OTHER_ANDDEA

          for file in $(find artifacts -type f -name "*.apk"); do
            filename=$(basename "$file")
            url="https://github.com/$REPO/releases/download/$TAG/$filename"

            case "$filename" in
              *revanced.apk)
                if [[ "$filename" == *"music"* ]]; then
                  YTM_REVANCED["$filename"]="$url"
                elif [[ "$filename" == *"spotify"* ]]; then
                  SPOT_REVANCED["$filename"]="$url"
                elif [[ "$filename" == *"youtube"* ]]; then
                  YT_REVANCED["$filename"]="$url"
                else
                  OTHER_REVANCED["$filename"]="$url"
                fi
                ;;
              *extended.apk)
                if [[ "$filename" == *"music"* ]]; then
                  YTM_EXTENDED["$filename"]="$url"
                elif [[ "$filename" == *"spotify"* ]]; then
                  SPOT_EXTENDED["$filename"]="$url"
                elif [[ "$filename" == *"youtube"* ]]; then
                  YT_EXTENDED["$filename"]="$url"
                else
                  OTHER_EXTENDED["$filename"]="$url"
                fi
                ;;
              *anddea.apk)
                if [[ "$filename" == *"music"* ]]; then
                  YTM_ANDDEA["$filename"]="$url"
                elif [[ "$filename" == *"spotify"* ]]; then
                  SPOT_ANDDEA["$filename"]="$url"
                elif [[ "$filename" == *"youtube"* ]]; then
                  YT_ANDDEA["$filename"]="$url"
                else
                  OTHER_ANDDEA["$filename"]="$url"
                fi
                ;;
            esac
          done

          make_section () {
            local title="$1"
            shift
            local -n ref=$1
            if [ ${#ref[@]} -gt 0 ]; then
              echo -n "$title%0A"
              for k in "${!ref[@]}"; do
                echo -n "• [$k](${ref[$k]})%0A"
              done
              echo -n "%0A"
            fi
          }

          MESSAGE="📦 *New APK Release*%0A%0A"

          MESSAGE+="🔥 *YouTube Revanced*%0A$(make_section '▶️ YouTube' YT_REVANCED)$(make_section '🎵 Music' YTM_REVANCED)$(make_section '🎧 Spotify' SPOT_REVANCED)$(make_section '📂 Other' OTHER_REVANCED)"
          MESSAGE+="✨ *YouTube Revanced Extended*%0A$(make_section '▶️ YouTube' YT_EXTENDED)$(make_section '🎵 Music' YTM_EXTENDED)$(make_section '🎧 Spotify' SPOT_EXTENDED)$(make_section '📂 Other' OTHER_EXTENDED)"
          MESSAGE+="🧩 *YouTube Revanced Anddea*%0A$(make_section '▶️ YouTube' YT_ANDDEA)$(make_section '🎵 Music' YTM_ANDDEA)$(make_section '🎧 Spotify' SPOT_ANDDEA)$(make_section '📂 Other' OTHER_ANDDEA)"

          echo "Sending categorized message ..."
          curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
            -d chat_id="$CHAT_ID" \
            -d parse_mode=Markdown \
            -d disable_web_page_preview=true \
            -d text="$MESSAGE"
